********** Animations ***************

backface-visibility: hidden 
   => résout le prb du texte qui remonte à la fin d'une anim

animation-iteration-count: 3; 
   => répéter une anim
animation-delay: 3s;    
   => ajouter un délai 


On peut soit utiliser les keyframes pour des anim complexes
Soit utiliser transition pour les petites anims
On peut mettre  transition: all .2s; sur le state initial (elem parent) pour que 
toutes les autres propriétés prennent cette transition

Rotations 
   => Ajout de perspective sur l'élément parent

display:none 
   => ne permet pas d'animer l'élément, utiliser plutot opacity:0, visibility:hidden


*********** BEM ********************
Méthodologie pour structurer efficacement le HTML
On réfléchit en terme de composants
 *  Un block html ne pouvant exister seul (sans son parent) aura une classe 
    débutant par __classeParent
 *   Un élement à l'intérieur d'un composant venant uniquement modifier son 
    comportement aura une classe avec --classeModifier
 *  Un block pouvant exister seul et être réutiliser aura uniqument sa propre classe


*********** Images *****************
Priviliégier l'utilisation des % pour les images, pour le responsive


********** Position ******************
Pour centrer un block dans un autre bloc 
 => Le parent doit etre en relative
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);



position: fixed 
   =>   same as absolute, but stay fixed in his position

Pour mettre deux éléments cote à cote dans un container
parent : display:table
enfant: display: table-cell
         vertical-align: middle;



********** Pseudo classes **********
:link       
   =>  permet de sélectionner les liens à l'intérieur d'élément
:visited    
   =>  modifier l'aspect d'un lien après que l'utilisateur l'a visité
:active     
   => cibler un élément lorsque celui-ci est activé par l'utilisateur
:target
   => S'applique lorsque l'élement est ciblé, exemple avec un anchor tag


******** Pseudo éléments ***********

mot-clé ajouté à un sélecteur qui permet de mettre en forme certaines parties de l'élément ciblé par la règle
::after => crée un pseudo-élément qui sera le dernier enfant de l'élément sélectionné
            Spécifier obligatoirement content, display, height, et width


************ divers ***************

margin: 0 auto 
   => centrer un block à l'intérieur d'un autre block
max-width:
 => utilise la largeur spécifié, et si le viewport devient trop petit, prend 100% de l'espace
[attribut] 
   => sélectionne des eléments par attributs
on peut ajouter ^, * OU $ comme les regex